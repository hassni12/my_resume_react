{"ast":null,"code":"import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nconst adapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n};\nexport default {\n  getAdapter: nameOrAdapter => {\n    if (utils.isString(nameOrAdapter)) {\n      const adapter = adapters[nameOrAdapter];\n\n      if (!nameOrAdapter) {\n        throw Error(utils.hasOwnProp(nameOrAdapter) ? \"Adapter '\".concat(nameOrAdapter, \"' is not available in the build\") : \"Can not resolve adapter '\".concat(nameOrAdapter, \"'\"));\n      }\n\n      return adapter;\n    }\n\n    if (!utils.isFunction(nameOrAdapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return nameOrAdapter;\n  },\n  adapters\n};","map":null,"metadata":{},"sourceType":"module"}