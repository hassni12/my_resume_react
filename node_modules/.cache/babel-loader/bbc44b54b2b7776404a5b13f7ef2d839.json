{"ast":null,"code":"import { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nconst svgVisualElement = visualElement({ ...htmlConfig,\n\n  getBaseTarget(props, key) {\n    return props[key];\n  },\n\n  readValueFromInstance(domElement, key) {\n    var _a;\n\n    if (transformProps.has(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n\n  scrapeMotionValuesFromProps,\n\n  build(_element, renderState, latestValues, options, props) {\n    buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n  },\n\n  render: renderSVG\n});\nexport { svgVisualElement };","map":null,"metadata":{},"sourceType":"module"}