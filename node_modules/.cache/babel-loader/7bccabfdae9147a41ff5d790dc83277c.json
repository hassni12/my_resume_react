{"ast":null,"code":"// src/index.ts\nvar hasSetup = false;\nvar modality = null;\nvar hasEventBeforeFocus = false;\nvar handlers =\n/* @__PURE__ */\nnew Set();\nvar isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false;\n\nfunction isValidKey(event) {\n  return !(event.metaKey || !isMac && event.altKey || event.ctrlKey);\n}\n\nfunction trigger(modality2, event) {\n  handlers.forEach(handler => handler(modality2, event));\n}\n\nfunction onKeyboardEvent(event) {\n  hasEventBeforeFocus = true;\n\n  if (isValidKey(event)) {\n    modality = \"keyboard\";\n    trigger(\"keyboard\", event);\n  }\n}\n\nfunction onPointerEvent(event) {\n  modality = \"pointer\";\n\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    trigger(\"pointer\", event);\n  }\n}\n\nfunction onWindowFocus(event) {\n  if (event.target === window || event.target === document) {\n    return;\n  }\n\n  if (!hasEventBeforeFocus) {\n    modality = \"keyboard\";\n    trigger(\"keyboard\", event);\n  }\n\n  hasEventBeforeFocus = false;\n}\n\nfunction onWindowBlur() {\n  hasEventBeforeFocus = false;\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\";\n}\n\nfunction setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || hasSetup) {\n    return;\n  }\n\n  const focus = HTMLElement.prototype.focus;\n\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true;\n    focus.apply(this, args);\n  };\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true);\n  document.addEventListener(\"keyup\", onKeyboardEvent, true);\n  window.addEventListener(\"focus\", onWindowFocus, true);\n  window.addEventListener(\"blur\", onWindowBlur, false);\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true);\n    document.addEventListener(\"pointermove\", onPointerEvent, true);\n    document.addEventListener(\"pointerup\", onPointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true);\n    document.addEventListener(\"mousemove\", onPointerEvent, true);\n    document.addEventListener(\"mouseup\", onPointerEvent, true);\n  }\n\n  hasSetup = true;\n}\n\nfunction trackFocusVisible(fn) {\n  setupGlobalFocusEvents();\n  fn(isFocusVisible());\n\n  const handler = () => fn(isFocusVisible());\n\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n}\n\nexport { trackFocusVisible };","map":null,"metadata":{},"sourceType":"module"}