{"ast":null,"code":"import _slicedToArray from \"/home/hassnain/MERN_APP/RESUME_WEBSITE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\n\nfunction applyDefaultFilter(v) {\n  let _v$slice$split = v.slice(0, -1).split('('),\n      _v$slice$split2 = _slicedToArray(_v$slice$split, 2),\n      name = _v$slice$split2[0],\n      value = _v$slice$split2[1];\n\n  if (name === 'drop-shadow') return v;\n\n  const _ref = value.match(floatRegex) || [],\n        _ref2 = _slicedToArray(_ref, 1),\n        number = _ref2[0];\n\n  if (!number) return v;\n  const unit = value.replace(number, '');\n  let defaultValue = maxDefaults.has(name) ? 1 : 0;\n  if (number !== value) defaultValue *= 100;\n  return name + '(' + defaultValue + unit + ')';\n}\n\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), {\n  getAnimatableNone: v => {\n    const functions = v.match(functionRegex);\n    return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n  }\n});\nexport { filter };","map":null,"metadata":{},"sourceType":"module"}