{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const submitDataApi = createAsyncThunk(\"data/submitData\", async ({\n  name,\n  email: from,\n  subject,\n  message\n}, rejectWithValue) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const _ref = await axios.post(\"http://localhost:5000/api/send_email\", {\n      name,\n      from,\n      subject,\n      message\n    }, config),\n          data = _ref.data;\n\n    console.log(data, \"chats axios\");\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst dataSlice = createSlice({\n  name: \"data\",\n  initialState: {\n    data: null,\n    isLoading: false,\n    isError: null\n  },\n  extraReducers: {\n    [submitDataApi.pending]: (state, action) => {\n      state.isLoading = true;\n      state.isError = null;\n    },\n    [submitDataApi.fulfilled]: (state, action) => {\n      state.data = action.payload;\n      state.isLoading = false;\n    },\n    [submitDataApi.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isError = action.payload.message;\n    }\n  }\n});\nexport default dataSlice.reducer;","map":{"version":3,"sources":["/home/hassnain/MERN_APP/RESUME_WEBSITE/src/component/slice/submitEmail.js"],"names":["createSlice","createAsyncThunk","axios","submitDataApi","name","email","from","subject","message","rejectWithValue","config","headers","post","data","console","log","error","response","dataSlice","initialState","isLoading","isError","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,iBAD2C,EAE3C,OAAO;AAAEG,EAAAA,IAAF;AAAQC,EAAAA,KAAK,EAACC,IAAd;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,CAAP,EAA+CC,eAA/C,KAAmE;AACjE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAKA,MAAI;AAAA,iBACe,MAAMT,KAAK,CAACU,IAAN,CACrB,sCADqB,EAErB;AAAER,MAAAA,IAAF;AAAQE,MAAAA,IAAR;AAAcC,MAAAA,OAAd;AAAuBC,MAAAA;AAAvB,KAFqB,EAGrBE,MAHqB,CADrB;AAAA,UACMG,IADN,QACMA,IADN;;AAOFC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,aAAlB;AACA,WAAOA,IAAP;AACD,GATD,CASE,OAAOG,KAAP,EAAc;AACd,WAAOP,eAAe,CAACO,KAAK,CAACC,QAAN,CAAeJ,IAAhB,CAAtB;AACD;AACF,CApB0C,CAAtC;AAuBP,MAAMK,SAAS,GAAGlB,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,MADsB;AAE5Be,EAAAA,YAAY,EAAE;AACZN,IAAAA,IAAI,EAAE,IADM;AAEZO,IAAAA,SAAS,EAAE,KAFC;AAGZC,IAAAA,OAAO,EAAE;AAHG,GAFc;AAQ5BC,EAAAA,aAAa,EAAE;AACb,KAACnB,aAAa,CAACoB,OAAf,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACJ,SAAN,GAAkB,IAAlB;AACAI,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;AACD,KAJY;AAKb,KAAClB,aAAa,CAACuB,SAAf,GAA2B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC5CD,MAAAA,KAAK,CAACX,IAAN,GAAaY,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACJ,SAAN,GAAkB,KAAlB;AACD,KARY;AASb,KAACjB,aAAa,CAACyB,QAAf,GAA0B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACJ,SAAN,GAAkB,KAAlB;AACAI,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,OAAP,CAAenB,OAA/B;AACD;AAZY;AARa,CAAD,CAA7B;AAuBA,eAAeU,SAAS,CAACW,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const submitDataApi = createAsyncThunk(\n  \"data/submitData\",\n  async ({ name, email:from, subject, message }, rejectWithValue) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/send_email\",\n        { name, from, subject, message },\n        config\n      );\n\n      console.log(data, \"chats axios\");\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst dataSlice = createSlice({\n  name: \"data\",\n  initialState: {\n    data: null,\n    isLoading: false,\n    isError: null,\n  },\n\n  extraReducers: {\n    [submitDataApi.pending]: (state, action) => {\n      state.isLoading = true;\n      state.isError = null;\n    },\n    [submitDataApi.fulfilled]: (state, action) => {\n      state.data = action.payload;\n      state.isLoading = false;\n    },\n    [submitDataApi.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isError = action.payload.message;\n    },\n  },\n});\nexport default dataSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}