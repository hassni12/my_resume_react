{"ast":null,"code":"import _objectWithoutProperties from \"/home/hassnain/MERN_APP/RESUME_WEBSITE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n// ../../../react-shim.js\nimport React from \"react\"; // src/control-box.tsx\n\nimport { chakra } from \"@chakra-ui/system\";\n\nvar ControlBox = props => {\n  const _props$type = props.type,\n        type = _props$type === void 0 ? \"checkbox\" : _props$type,\n        _hover = props._hover,\n        _invalid = props._invalid,\n        _disabled = props._disabled,\n        _focus = props._focus,\n        _checked = props._checked,\n        _props$_child = props._child,\n        _child = _props$_child === void 0 ? {\n    opacity: 0\n  } : _props$_child,\n        _props$_checkedAndChi = props._checkedAndChild,\n        _checkedAndChild = _props$_checkedAndChi === void 0 ? {\n    opacity: 1\n  } : _props$_checkedAndChi,\n        _checkedAndDisabled = props._checkedAndDisabled,\n        _checkedAndFocus = props._checkedAndFocus,\n        _checkedAndHover = props._checkedAndHover,\n        children = props.children,\n        rest = _objectWithoutProperties(props, [\"type\", \"_hover\", \"_invalid\", \"_disabled\", \"_focus\", \"_checked\", \"_child\", \"_checkedAndChild\", \"_checkedAndDisabled\", \"_checkedAndFocus\", \"_checkedAndHover\", \"children\"]);\n\n  const checkedAndDisabled = \"input[type=\".concat(type, \"]:checked:disabled + &\");\n  const checkedAndHover = \"input[type=\".concat(type, \"]:checked:hover:not(:disabled) + &\");\n  const checkedAndFocus = \"input[type=\".concat(type, \"]:checked:focus + &\");\n  const disabled = \"input[type=\".concat(type, \"]:disabled + &\");\n  const focus = \"input[type=\".concat(type, \"]:focus + &\");\n  const hover = \"input[type=\".concat(type, \"]:hover:not(:disabled):not(:checked) + &\");\n  const checked = \"input[type=\".concat(type, \"]:checked + &, input[type=\").concat(type, \"][aria-checked=mixed] + &\");\n  const invalid = \"input[type=\".concat(type, \"][aria-invalid=true] + &\");\n  const child = \"& > *\";\n  return (\n    /* @__PURE__ */\n    React.createElement(chakra.div, { ...rest,\n      \"aria-hidden\": true,\n      __css: {\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        transitionProperty: \"common\",\n        transitionDuration: \"fast\",\n        flexShrink: 0,\n        [focus]: _focus,\n        [hover]: _hover,\n        [disabled]: _disabled,\n        [invalid]: _invalid,\n        [checkedAndDisabled]: _checkedAndDisabled,\n        [checkedAndFocus]: _checkedAndFocus,\n        [checkedAndHover]: _checkedAndHover,\n        [child]: _child,\n        [checked]: { ..._checked,\n          [child]: _checkedAndChild\n        }\n      }\n    }, children)\n  );\n};\n\nControlBox.displayName = \"ControlBox\";\nexport { ControlBox };","map":null,"metadata":{},"sourceType":"module"}