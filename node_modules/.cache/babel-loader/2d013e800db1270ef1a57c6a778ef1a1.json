{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\"; // src/chakra-provider.tsx\n\nimport { CSSReset, CSSPolyfill } from \"@chakra-ui/css-reset\";\nimport { PortalManager } from \"@chakra-ui/portal\";\nimport { ColorModeProvider, GlobalStyle, ThemeProvider } from \"@chakra-ui/system\";\nimport { EnvironmentProvider } from \"@chakra-ui/react-env\";\n\nvar ChakraProvider = props => {\n  const children = props.children,\n        colorModeManager = props.colorModeManager,\n        portalZIndex = props.portalZIndex,\n        _props$resetCSS = props.resetCSS,\n        resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n        _props$theme = props.theme,\n        theme = _props$theme === void 0 ? {} : _props$theme,\n        environment = props.environment,\n        cssVarsRoot = props.cssVarsRoot;\n\n  const _children =\n  /* @__PURE__ */\n  React.createElement(EnvironmentProvider, {\n    environment\n  }, children);\n\n  return (\n    /* @__PURE__ */\n    React.createElement(ThemeProvider, {\n      theme,\n      cssVarsRoot\n    },\n    /* @__PURE__ */\n    React.createElement(ColorModeProvider, {\n      colorModeManager,\n      options: theme.config\n    }, resetCSS ?\n    /* @__PURE__ */\n    React.createElement(CSSReset, null) :\n    /* @__PURE__ */\n    React.createElement(CSSPolyfill, null),\n    /* @__PURE__ */\n    React.createElement(GlobalStyle, null), portalZIndex ?\n    /* @__PURE__ */\n    React.createElement(PortalManager, {\n      zIndex: portalZIndex\n    }, _children) : _children))\n  );\n};\n\nexport { ChakraProvider };","map":null,"metadata":{},"sourceType":"module"}