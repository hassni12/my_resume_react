{"ast":null,"code":"import sync, { cancelSync } from 'framesync';\nimport { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\nfunction useAnimationFrame(callback) {\n  const initialTimestamp = useRef(0);\n\n  const _useContext = useContext(MotionConfigContext),\n        isStatic = _useContext.isStatic;\n\n  useEffect(() => {\n    if (isStatic) return;\n\n    const provideTimeSinceStart = ({\n      timestamp,\n      delta\n    }) => {\n      if (!initialTimestamp.current) initialTimestamp.current = timestamp;\n      callback(timestamp - initialTimestamp.current, delta);\n    };\n\n    sync.update(provideTimeSinceStart, true);\n    return () => cancelSync.update(provideTimeSinceStart);\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","map":null,"metadata":{},"sourceType":"module"}