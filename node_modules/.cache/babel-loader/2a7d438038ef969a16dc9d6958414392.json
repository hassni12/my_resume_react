{"ast":null,"code":"// src/index.ts\nimport { useMemo } from \"react\";\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\".concat(value, \"' to ref '\").concat(ref, \"'\"));\n  }\n}\n\nfunction mergeRefs(...refs) {\n  return node => {\n    refs.forEach(ref => {\n      assignRef(ref, node);\n    });\n  };\n}\n\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\n\nexport { assignRef, mergeRefs, useMergeRefs };","map":null,"metadata":{},"sourceType":"module"}