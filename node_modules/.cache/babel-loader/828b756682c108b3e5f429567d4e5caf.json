{"ast":null,"code":"import _objectWithoutProperties from \"/home/hassnain/MERN_APP/RESUME_WEBSITE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n// ../../../react-shim.js\nimport React from \"react\"; // src/switch.tsx\n\nimport { useCheckbox } from \"@chakra-ui/checkbox\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\"; // ../../utilities/shared-utils/src/index.ts\n\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\nvar dataAttr = condition => condition ? \"\" : void 0; // src/switch.tsx\n\n\nimport { useMemo } from \"react\";\nvar Switch = forwardRef(function Switch2(props, ref) {\n  const styles = useMultiStyleConfig(\"Switch\", props);\n\n  const _omitThemingProps = omitThemingProps(props),\n        _omitThemingProps$spa = _omitThemingProps.spacing,\n        spacing = _omitThemingProps$spa === void 0 ? \"0.5rem\" : _omitThemingProps$spa,\n        children = _omitThemingProps.children,\n        ownProps = _objectWithoutProperties(_omitThemingProps, [\"spacing\", \"children\"]);\n\n  const _useCheckbox = useCheckbox(ownProps),\n        state = _useCheckbox.state,\n        getInputProps = _useCheckbox.getInputProps,\n        getCheckboxProps = _useCheckbox.getCheckboxProps,\n        getRootProps = _useCheckbox.getRootProps,\n        getLabelProps = _useCheckbox.getLabelProps;\n\n  const containerStyles = useMemo(() => ({\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    lineHeight: 0,\n    ...styles.container\n  }), [styles.container]);\n  const trackStyles = useMemo(() => ({\n    display: \"inline-flex\",\n    flexShrink: 0,\n    justifyContent: \"flex-start\",\n    boxSizing: \"content-box\",\n    cursor: \"pointer\",\n    ...styles.track\n  }), [styles.track]);\n  const labelStyles = useMemo(() => ({\n    userSelect: \"none\",\n    marginStart: spacing,\n    ...styles.label\n  }), [spacing, styles.label]);\n  return (\n    /* @__PURE__ */\n    React.createElement(chakra.label, { ...getRootProps(),\n      className: cx(\"chakra-switch\", props.className),\n      __css: containerStyles\n    },\n    /* @__PURE__ */\n    React.createElement(\"input\", {\n      className: \"chakra-switch__input\",\n      ...getInputProps({}, ref)\n    }),\n    /* @__PURE__ */\n    React.createElement(chakra.span, { ...getCheckboxProps(),\n      className: \"chakra-switch__track\",\n      __css: trackStyles\n    },\n    /* @__PURE__ */\n    React.createElement(chakra.span, {\n      __css: styles.thumb,\n      className: \"chakra-switch__thumb\",\n      \"data-checked\": dataAttr(state.isChecked),\n      \"data-hover\": dataAttr(state.isHovered)\n    })), children &&\n    /* @__PURE__ */\n    React.createElement(chakra.span, {\n      className: \"chakra-switch__label\",\n      ...getLabelProps(),\n      __css: labelStyles\n    }, children))\n  );\n});\nSwitch.displayName = \"Switch\";\nexport { Switch };","map":null,"metadata":{},"sourceType":"module"}