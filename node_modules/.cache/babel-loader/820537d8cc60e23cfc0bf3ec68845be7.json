{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar utils = require('@motionone/utils');\n\nvar featureDetection = require('./feature-detection.cjs.js'); // Create a linear easing point for every x second\n\n\nconst resolution = 0.015;\n\nconst generateLinearEasingPoints = (easing, duration) => {\n  let points = \"\";\n  const numPoints = Math.round(duration / resolution);\n\n  for (let i = 0; i < numPoints; i++) {\n    points += easing(utils.progress(0, numPoints - 1, i)) + \", \";\n  }\n\n  return points.substring(0, points.length - 2);\n};\n\nconst convertEasing = (easing, duration) => {\n  if (utils.isFunction(easing)) {\n    return featureDetection.supports.linearEasing() ? \"linear(\".concat(generateLinearEasingPoints(easing, duration), \")\") : utils.defaults.easing;\n  } else {\n    return utils.isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n  }\n};\n\nconst cubicBezierAsString = ([a, b, c, d]) => \"cubic-bezier(\".concat(a, \", \").concat(b, \", \").concat(c, \", \").concat(d, \")\");\n\nexports.convertEasing = convertEasing;\nexports.cubicBezierAsString = cubicBezierAsString;\nexports.generateLinearEasingPoints = generateLinearEasingPoints;","map":null,"metadata":{},"sourceType":"script"}