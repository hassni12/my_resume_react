{"ast":null,"code":"import _slicedToArray from \"/home/hassnain/MERN_APP/RESUME_WEBSITE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport sync from 'framesync';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n  const isMounted = useIsMounted();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        forcedRenderCount = _useState2[0],\n        setForcedRenderCount = _useState2[1];\n\n  const forceRender = useCallback(() => {\n    isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n  /**\n   * Defer this to the end of the next animation frame in case there are multiple\n   * synchronous calls.\n   */\n\n  const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n  return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };","map":null,"metadata":{},"sourceType":"module"}