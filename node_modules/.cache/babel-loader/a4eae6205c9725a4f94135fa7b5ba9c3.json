{"ast":null,"code":"import { resolveVariantFromProps } from './resolve-variants.mjs';\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\n\nfunction getCurrent(visualElement) {\n  const current = {};\n  visualElement.forEachValue((value, key) => current[key] = value.get());\n  return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\n\n\nfunction getVelocity(visualElement) {\n  const velocity = {};\n  visualElement.forEachValue((value, key) => velocity[key] = value.getVelocity());\n  return velocity;\n}\n\nfunction resolveVariant(visualElement, definition, custom) {\n  const props = visualElement.getProps();\n  return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };","map":null,"metadata":{},"sourceType":"module"}